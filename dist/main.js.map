{"version":3,"sources":["../main.js"],"names":["city","$input","val","urlToFetch","url","clientId","clientSecret","fetch","response","ok","json","jsonResponse","console","log","venues","groups","items","map","location","venue","getVenues","forecastUrl","apiKey","days","forecast","forecastday","getForecast","imgPrefix","$","$submit","$destination","$container","$venueDivs","$weatherDivs","weekDays","renderVenues","forEach","$venue","index","venueContent","name","photos","suffix","address","country","append","renderForecast","$day","weatherContent","day","maxtemp_f","mintemp_f","hour","condition","icon","Date","date","getDay","executeSearch","empty","css","then","click"],"mappings":"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","file":"main.js","sourcesContent":["// Foursquare API Info\r\nconst clientId = 'MQD3IDMNNLWHTFTF3IYN3HFMQ2PUHDNQCLZFHKU3UEWTSD3B';\r\nconst clientSecret = 'E0ZICOPR0Z2KGIR4D24YOKPVDG2BPA2IT23HQGP4AZVJNED2';\r\nconst url = 'https://api.foursquare.com/v2/venues/explore?near=';\r\nconst imgPrefix = 'https://igx.4sqi.net/img/general/150x200';\r\n\r\n// APIXU Info\r\nconst apiKey = 'e4fc7e4e6b9a4511a13191410171811';\r\nconst forecastUrl = 'https://api.apixu.com/v1/forecast.json?key=';\r\n\r\n// Page Elements\r\nconst $input = $('#city');\r\nconst $submit = $('#button');\r\nconst $destination = $('#destination');\r\nconst $container = $('.container');\r\nconst $venueDivs = [$(\"#venue1\"), $(\"#venue2\"), $(\"#venue3\"), $(\"#venue4\")];\r\nconst $weatherDivs = [$(\"#weather1\"), $(\"#weather2\"), $(\"#weather3\"), $(\"#weather4\")];\r\nconst weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n\r\n// AJAX functions\r\n\r\nasync function getVenues() {\r\n    const city = $input.val();\r\n    const urlToFetch = url + city + '&venuePhotos=1&limit=10&client_id=' + clientId + '&client_secret=' + clientSecret + '&v=20170305';\r\n    try {\r\n        let response = await fetch(urlToFetch);\r\n        if (response.ok) {\r\n            let jsonResponse = await response.json();\r\n            console.log(jsonResponse);\r\n            let venues = jsonResponse.response.groups[0].items.map(location => location.venue);\r\n        }\r\n        return venues;\r\n    } catch(error) {console.log(error);}\r\n}\r\n\r\nasync function getForecast() {\r\n    const urlToFetch = forecastUrl + apiKey + '&q=' + $input.val() + '&days=4&hour=11';\r\n    try {\r\n        let response = await fetch(urlToFetch);\r\n        if (response.ok) {\r\n            let jsonResponse = await response.json();\r\n            console.log(jsonResponse);\r\n            let days = jsonResponse.forecast.forecastday;\r\n        }\r\n        return days;\r\n    }\r\n    catch(error) {console.log(error);}\r\n\r\n}\r\n\r\n// Render functions\r\nfunction renderVenues(venues) {\r\n    $venueDivs.forEach(($venue, index) => {\r\n        let venueContent =\r\n            '<h2>' + venues[index].name + '</h2>' +\r\n            '<img class=\"venueimage\" src=\"' + imgPrefix +\r\n            venues[index].photos.groups[0].items[0].suffix + '\"/>' +\r\n            '<h3>Address:</h3>' +\r\n            '<p>' + venues[index].location.address + '</p>' +\r\n            '<p>' + venues[index].location.city + '</p>' +\r\n            '<p>' + venues[index].location.country + '</p>';\r\n        $venue.append(venueContent);\r\n    });\r\n    $destination.append('<h2>' + venues[0].location.city + '</h2>');\r\n}\r\n\r\nfunction renderForecast(days) {\r\n    $weatherDivs.forEach(($day, index) => {\r\n        let weatherContent =\r\n            '<h2> High: ' + days[index].day.maxtemp_f + '</h2>' +\r\n            '<h2> Low: ' + days[index].day.mintemp_f + '</h2>' +\r\n            '<img src=\"http://' + days[index].hour[0].condition.icon +\r\n            '\" class=\"weathericon\" />' +\r\n            '<h2>' + weekDays[(new Date(days[index].date)).getDay()] + '</h2>';\r\n        $day.append(weatherContent);\r\n    });\r\n}\r\n\r\nfunction executeSearch() {\r\n    $venueDivs.forEach(venue => venue.empty());\r\n    $weatherDivs.forEach(day => day.empty());\r\n    $destination.empty();\r\n    $container.css(\"visibility\", \"visible\");\r\n    getVenues().then(venues => renderVenues(venues));\r\n    getForecast().then(forecast => renderForecast(forecast));;\r\n    return false;\r\n}\r\n\r\n$submit.click(executeSearch)\r\n"]}